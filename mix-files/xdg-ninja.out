
[1m[3mStarting to check your [36m$HOME[0m.

[[1m[33mansible[0m]: [1m[3m$HOME/.ansible[0m

See this
https://github.com/ansible/ansible/commit/d7fbde4ea9db6cc44e81c39d699595330f4fa3c6
pull request.

Seems to be implemented now, you should be able to set the *ANSIBLE_HOME*
environment variable.

I couldn't get it to work yet unfortunately, and you might need to wait for
a new release.

[[1m[33marandr[0m]: [1m[3m$HOME/.screenlayout[0m

Currently unsupported.

*Relevant issue:* https://gitlab.com/arandr/arandr/-/issues/45

[[1m[33mbash[0m]: [1m[3m$HOME/.bash_logout[0m

Currently unsupported.

*Relevant issue:* https://savannah.gnu.org/support/?108134

[[1m[33mbash[0m]: [1m[3m$HOME/.bash_profile[0m

Currently unsupported.

*Relevant issue:* https://savannah.gnu.org/support/?108134

[[1m[33mbash[0m]: [1m[3m$HOME/.bashrc[0m

Currently unsupported.

*Relevant issue:* https://savannah.gnu.org/support/?108134

[[1m[31mbash[0m]: [1m[3m$HOME/.bash_history[0m

Export the following environment variables:

export HISTFILE="${XDG_STATE_HOME}"/bash/history

[[1m[31mcargo[0m]: [1m[3m$HOME/.cargo[0m

Export the following environment variables:

export CARGO_HOME="$XDG_DATA_HOME"/cargo

[[1m[33mFirefox[0m]: [1m[3m$HOME/.mozilla[0m

Currently unsupported.

*Relevant issue:* https://bugzilla.mozilla.org/show_bug.cgi?id=259356

[[1m[33mFlatpak[0m]: [1m[3m$HOME/.var[0m

Currently unsupported.

*Relevant issue:* https://github.com/flatpak/flatpak/issues/1519

[[1m[31mfonts[0m]: [1m[3m$HOME/.fonts[0m

Supported

The file $HOME/.fonts can be moved to $XDG_DATA_HOME/fonts.

[[1m[31mgnupg[0m]: [1m[3m$HOME/.gnupg[0m

Export the following environment variables:

export GNUPGHOME="$XDG_DATA_HOME"/gnupg

*Note: from the archwiki:*

â”‚ If you use non-default GnuPG Home directory, you will need to edit all
â”‚ socket files to use the values of gpgconf --list-dirs.
â”‚ If you set your SSH_AUTH_SOCK manually, keep in mind that your socket
â”‚ location may be different if you are using a custom GNUPGHOME

[[1m[31mncurses[0m]: [1m[3m$HOME/.terminfo[0m

Export the following environment variables:

export TERMINFO="$XDG_DATA_HOME"/terminfo
export TERMINFO_DIRS="$XDG_DATA_HOME"/terminfo:/usr/share/terminfo

[[1m[33mnss[0m]: [1m[3m$HOME/.pki[0m

**Disclaimer: XDG is supported, but directory may be created again by some
programs.**

XDG is supported out-of-the-box, so we can simply move directory to
*"$XDG_DATA_HOME"/pki*.

*Note: some apps (chromium, for example) hardcode path to "$HOME"/.pki, so
directory may appear again, see*
https://bugzilla.mozilla.org/show_bug.cgi?id=818686#c11*.*

[[1m[33mopenssh[0m]: [1m[3m$HOME/.ssh[0m

Assumed to be present by many ssh daemons and clients such as **DropBear**
and **OpenSSH**.

[[1m[31mprofile[0m]: [1m[3m$HOME/.profile[0m

There are shells and window managers that don't need this file and won't
create it, depending on your config, this file might be deleted or moved.

If you do not know, please do not move this file as it could lead to errors.

[[1m[31meditor[0m]: [1m[3m$HOME/.selected_editor[0m

Configure what editor to use:

update-alternatives --config editor

[[1m[31msudo[0m]: [1m[3m$HOME/.sudo_as_admin_successful[0m

This file is only generated by versions >=1.9.6 if they were built with *--
enable-admin-flag*.

However, these versions also support disabling the creation of this file via
the *admin_flag* sudoers option, regardless of build configuration.
To do this, add the following directive to */etc/sudoers* or (preferably) to
a file under */etc/sudoers.d*:

Defaults !admin_flag

Note that bash may be configured to always print out a "hint" on interactive
sessions if neither *"$HOME"/.sudo_as_admin_successful* nor
*"$HOME"/.hushlogin* exist.

To prevent this, comment out or delete the corresponding *if* statement in
*/etc/bashrc.bashrc*.

[[1m[31mtmux[0m]: [1m[3m$HOME/.tmux.conf[0m

Supported since *v3.2* (Partial support since *v3.1*).

You can move the file to *$XDG_CONFIG_HOME/tmux/tmux.conf*.

[[1m[31mtmux[0m]: [1m[3m$HOME/.tmux[0m

Set this in your tmux.conf:

`set-environment -g TMUX_PLUGIN_MANAGER_PATH '~/.local/share/tmux/plugins'`

Then update the path to tpm to:

`run '~/.local/share/tmux/plugins/tpm/tpm'`

Now move .tmux to *XDG_CONFIG_HOME*/tmux.

[[1m[31murxvtd[0m]: [1m[3m$HOME/.urxvt[0m

Export the following environment variables:

export RXVT_SOCKET="$XDG_RUNTIME_DIR"/urxvtd

If the `$HOME/.urxvt` folder still shows up, try adding
`RXVT_SOCKET=$XDG_DATA_HOME/urxvtd` before the `urxvtd` command:

RXVT_SOCKET="$XDG_DATA_HOME"/urxvtd urxvtd -q -o -f

If that doesn't work either, try changing `"$XDG_DATA_HOME"/urxvtd` to
`/tmp/urxvt-socket`

[[1m[31mvim[0m]: [1m[3m$HOME/.viminfo[0m

See help for *.vimrc*

[[1m[31mvim[0m]: [1m[3m$HOME/.vim[0m

See help for *.vimrc*

[[1m[31mwget[0m]: [1m[3m$HOME/.wget-hsts[0m

Alias wget to use a custom hsts cache file location:

alias wget=wget --hsts-file="$XDG_DATA_HOME/wget-hsts"

[[1m[31mxorg-xauth[0m]: [1m[3m$HOME/.Xauthority[0m

Export the following environment variables:

export XAUTHORITY="$XDG_RUNTIME_DIR"/Xauthority

â€¢ **LightDM does not allow you to do this.** See here
https://askubuntu.com/a/961459 for workaround.
â€¢ SLiM has *~/.Xauthority* hardcoded
â€¢ SDDM uses its own config to set XAUTHORITY variable. **Do not set it
manually.**
Example `/etc/sddm.conf.d/xorg_settings.conf`:

[X11]
UserAuthFile=.local/share/sddm/Xauthority

*Note: this might not work as expected, so be careful.*

[[1m[31mxorg-xrdb[0m]: [1m[3m$HOME/.Xresources[0m

xrdb loads these resources, wherever you call xrdb, add this flag:

xrdb -load "$XDG_CONFIG_HOME/X11/xresources"

*Note: It will probably be called by your Xsession file.*

[[1m[31mxorg[0m]: [1m[3m$HOME/.xsession-errors[0m

You need to export these environment variables as part of your xorg init
script.

This could be *$HOME/.xinitrc* for example, most display managers should
also source */etc/profile*.

ERRFILE="$XDG_CACHE_HOME/X11/xsession-errors"

[[1m[31mxorg[0m]: [1m[3m$HOME/.xsessionrc[0m

You need to export these environment variables as part of your xorg init
script.

This could be *$HOME/.xinitrc* for example, most display managers should
also source */etc/profile*.

USERXSESSIONRC="$XDG_CACHE_HOME/X11/xsessionrc"

[1m[3mDone checking your [36m$HOME.[0m

[3mIf you have files in your [36m$HOME[0m[3m that shouldn't be there, but weren't recognised by xdg-ninja, please consider creating a configuration file for it and opening a pull request on github.[0m

